version: '3.8'

services:
  # MySQL Database for Development
  mysql:
    image: mysql:8.0
    container_name: tasktracker_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: logsdb
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    networks:
      - tasktracker_dev_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # Backend API (.NET 8) - Development
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: tasktracker_backend_dev
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=mysql;Database=logsdb;User=root;Password=password;
      - ConnectionStrings__MySQL=Server=mysql;Port=3306;Database=logsdb;Uid=root;Pwd=password;SslMode=none;
      - Jwt__Key=YourGeneratedSecretKeyHmmmmm
      - Jwt__Issuer=PersonalTaskTracker
      - Jwt__Audience=PersonalTaskTrackerUsers
      - Jwt__ExpiryInHours=24
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - tasktracker_dev_network
    volumes:
      - ./backend:/app
      - /app/bin
      - /app/obj

  # Frontend (React) - Development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: tasktracker_frontend_dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - WDS_SOCKET_PORT=0
    ports:
      - "3000:3000"
    networks:
      - tasktracker_dev_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  mysql_dev_data:
    driver: local

networks:
  tasktracker_dev_network:
    driver: bridge
